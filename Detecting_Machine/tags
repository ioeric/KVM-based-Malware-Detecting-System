!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Detector	Detector_Server.py	/^Detector = 'Detector'$/;"	v
Detector_SocketHandler	Detector_Server.py	/^class Detector_SocketHandler(SocketServer.BaseRequestHandler):$/;"	c	inherits:SocketServer.BaseRequestHandler
Detector_Threaded_Server	Detector_Server.py	/^class Detector_Threaded_Server(SocketServer.ThreadingMixIn, SocketServer.UnixStreamServer):$/;"	c	inherits:SocketServer.ThreadingMixIn, SocketServer.UnixStreamServer
SOCK_FILE	Http2file_socket.h	/^const char* SOCK_FILE = "UN_SOCK_FILE"$/;"	v
SocketServer	Detector_Server.py	/^import SocketServer$/;"	i
__init__	Detector_Server.py	/^    def __init__(self):$/;"	m	class:Detector_SocketHandler	access:public
detect	Detector_Server.py	/^    def detect(self):$/;"	m	class:Detector_SocketHandler	access:public
finalize	Detector_Server.py	/^    def finalize():$/;"	m	class:Detector_Threaded_Server	access:public
handle	Detector_Server.py	/^    def handle(self):$/;"	m	class:Detector_SocketHandler	access:public
os	Detector_Server.py	/^import os$/;"	i
parse	Detector_Server.py	/^    def parse(self,data):$/;"	m	class:Detector_SocketHandler	access:public
re	Detector_Server.py	/^import re$/;"	i
send_msg	Http2file_socket.h	/^int send_msg(char *msg);$/;"	p	signature:(char *msg)
server	Detector_Server.py	/^    server = Detector_Threaded_Server(server_address, Detector_SocketHandler)$/;"	v	class:Detector_Threaded_Server
server	Http2file_socket.h	/^struct sockaddr_un server;$/;"	v	typeref:struct:sockaddr_un
server_address	Detector_Server.py	/^    server_address = '.\/UN_SOCK_FILE'$/;"	v	class:Detector_Threaded_Server
signal	Detector_Server.py	/^import signal$/;"	i
sock_init	Http2file_socket.c	/^int sock_init(){$/;"	f
sock_init	Http2file_socket.h	/^void sock_init();$/;"	p	signature:()
socket	Detector_Server.py	/^import socket$/;"	i
subprocess	Detector_Server.py	/^import subprocess$/;"	i
t	Detector_Server.py	/^    t = threading.Thread(target = server.serve_forever)$/;"	v	class:Detector_Threaded_Server
threading	Detector_Server.py	/^import threading$/;"	i
